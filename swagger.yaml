openapi: 3.0.0
info:
  title: Airport Fuel Management System
  description: fuel management system
  version: 1.0.0
  contact:
    email: mfsi.deepak.j@gmail.com

servers:
  - url: "http://localhost:8000/api"
    description: for localhost

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []

paths:
  # for signup
  /v1/signup:
    post:
      tags:
        - User
      summary: creates an user
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string

      responses:
        201:
          description: return new user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
                  user:
                    type: object
                  token:
                    type: string
        400:
          description: bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
  # for signin
  /v1/signin:
    post:
      tags:
        - User
      summary: login an user
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string

      responses:
        200:
          description: Authenticate an user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
                  token:
                    type: string
                  user:
                    type: object
        400:
          description: bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        404:
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
  # for logout
  /v1/logout:
    get:
      tags:
        - User
      summary: logout an user
      consumes:
        - application/json
      produces:
        - application/json

      responses:
        200:
          description: logout an user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        400:
          description: bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string

  # path for add and get airport data
  /v1/airports:
    # for add new airport
    post:
      tags:
        - Airport
      summary: Add New Airport
      consumes:
        - application/json
      produces:
        - application/json

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                airportName:
                  type: string
                fuelCapacity:
                  type: number
                fuelAvailable:
                  type: number

      responses:
        201:
          description: Returns new Airport Details
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
                  airport:
                    type: object

        400:
          description: bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        401:
          description: unauthorize access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
    # get all airport details
    get:
      tags:
        - Airport
      summary: returns airports depened upon sort , offset and limit
      parameters:
        - name: sortBy
          in: query
          required: true
          default: firstFetch
          schema:
            type: string
        - name: offSet
          in: query
          required: 
          default: 0
          schema:
            type: string
        - name: limit
          in: query
          required: true
          default: 10
          schema:
            type: string
      responses:
        200:
          description: array of objects containing airports details
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
                  airports:
                    type: array
        400:
          description: bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string

        404:
          description: return error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        401:
          description: unauthorize access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string


  
    
  # path for delete, update 
  /v1/airports/{airportId}:
    #delete a specific airport
    delete:
      tags:
        - Airport
      summary: delete an Airport by ID
      parameters:
        - name: airportId
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
           description: delete airport
        400:
          description: bad request
        401:
          description: unauthorize access
          
        500:
          description: internal server error
    #update airport by put 
    put:
      tags:
        - Airport
      summary:  update Airport by ID

      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: airportId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                airportName:
                  type: string
                fuelCapacity:
                  type: number
                fuelAvailable:
                  type: number
      responses:
        201:
          description: returns the updated airport
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
                  airport:
                    type: object

        400:
          description: return error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        404:
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        401:
          description: unauthorize access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
    # update airport by patch
    patch:
      tags:
        - Airport
      summary:  update Airport by ID

      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: airportId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                airportName:
                  type: string
                fuelCapacity:
                  type: number
                fuelAvailable:
                  type: number
      responses:
        201:
          description: returns the updated airport
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
                  airport:
                    type: object

        400:
          description: return error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        404:
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        401:
          description: unauthorize access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string



  
  
    
  
# path for add and get airport data
  /v1/aircrafts:
    # for add new aircraft
    post:
      tags:
        - Aircraft
      summary: Add New Aircraft
      consumes:
        - application/json
      produces:
        - application/json
     
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                aircraftNo:
                  type: string
                airline:
                  type: string

      responses:
        201:
          description: Returns new Airport Details
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
                  aircraft:
                    type: object

        400:
          description: bad request error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        404:
          description: not found error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        401:
          description: unauthorize access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
    # get all aircraft data
    get:
      tags:
        - Aircraft
      summary: returns aircarft depeneds upon sort , offset and limit
      parameters:
        
        - name: sortBy
          in: query
          required: true
          default: firstFetch
          schema:
            type: string
        - name: offSet
          in: query
          required: true
          default: 0
          schema:
            type: string
        - name: limit
          in: query
          required: true
          default: 10
          schema:
            type: string
      responses:
        200:
          description: array of objects containing aircrafts details
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
                  aircrafts:
                    type: array

        404:
          description: return error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        400:
          description: return error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        401:
          description: unauthorize access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string

  
    
    
# path for delete,update aircraft
  /v1/aircrafts/{aircraftId}:
    # delete an aircraft
    delete:
      tags:
        - Aircraft
      summary: delete an aircraft by ID
      parameters:
        - name: aircraftId
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: delete an aircraft
        404:
          description: bad request
        404:
          description: not found
        401:
          description: unauthorize access
          
        500:
          description: internal server error
    # update airport by put 
    put:
      tags:
        - Aircraft
      summary: update an aircraft by ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: aircraftId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                aircraftNo:
                  type: string
                airline:
                  type: string

      responses:
        201:
          description: returns the updated airport
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
                  updatedAircraft:
                    type: object

        400:
          description: return error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        404:
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        401:
          description: unauthorize access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
    # update airport by patch
    patch:
      tags:
        - Aircraft
      summary: update an aircraft by ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: aircraftId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                aircraftNo:
                  type: string
                airline:
                  type: string

      responses:
        201:
          description: returns the updated airport
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
                  updatedAircraft:
                    type: object

        400:
          description: return error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        404:
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        401:
          description: unauthorize access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
 
    
  
# path for add and get transaction data
  /v1/transactions:
    # add transaction
    post:
      tags:
        - Transaction
      summary: create new transaction
      consumes:
        - application/json
      produces:
        - application/json
     
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transactionType:
                  type: string
                airportId:
                  type: string
                aircraftId:
                  type: string
                quantity:
                  type: number

      responses:
        201:
          description: Returns new transaction Details
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
                  transaction:
                    type: object

        400:
          description: return error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        401:
          description: unauthorize access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string 
  # fetch transactions
    get:
      tags:
        - Transaction
      summary: returns transaction depeneds upon sort , offset and limit
      parameters:
       
        - name: sortBy
          in: query
          required: true
          default: firstFetch
          schema:
            type: string
        - name: offSet
          in: query
          required: true
          default: 0
          schema:
            type: string
        - name: limit
          in: query
          required: true
          default: 10
          schema:
            type: string
      responses:
        200:
          description: array of objects containing transaction details
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
                  transaction:
                    type: array

        404:
          description: return error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        400:
          description: return error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        401:
          description: unauthorize access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string 
  
  #path for delete ,update transaction 
  /v1/transactions/{transactionId}:
    # delete transaction
    delete:
      tags:
        - Transaction
      summary: delete a transaction by ID
      parameters:
        
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: delete an transaction
        400:
          description: bad request
        401:
          description: unauthorize access
          
        500:
          description: internal server error
  # update transaction
    put:
      tags:
        - Transaction
      summary: update an transaction by ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
       
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transactionType:
                  type: string
                airportId:
                  type: string
                aircraftId:
                  type: string
                quantity:
                  type: number

      responses:
        201:
          description: returns the updated transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
                  updatedtransaction:
                    type: object

        400:
          description: bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        404:
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
      401:
          description: unauthorize access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
      500:
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
    # update transaction
    patch:
      tags:
        - Transaction
      summary: update an transaction by ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
       
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transactionType:
                  type: string
                airportId:
                  type: string
                aircraftId:
                  type: string
                quantity:
                  type: number

      responses:
        201:
          description: returns the updated transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
                  updatedtransaction:
                    type: object

        400:
          description: return error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        404:
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        401:
          description: unauthorize access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
          
          